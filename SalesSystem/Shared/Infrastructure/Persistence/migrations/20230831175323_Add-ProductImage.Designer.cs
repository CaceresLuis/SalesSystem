// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SalesSystem.Shared.Infrastructure;

#nullable disable

namespace SalesSystem.shared.infrastructure.persistence.migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230831175323_Add-ProductImage")]
    partial class AddProductImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c5012f7b-4cbc-4c66-a467-7fd5af53b57a",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "dd5eecad-2615-45b4-a3cf-40f262931194",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "9eb3c88f-e2e1-4d83-8b03-ad506ed4e576",
                            RoleId = "c5012f7b-4cbc-4c66-a467-7fd5af53b57a"
                        },
                        new
                        {
                            UserId = "aec741be-ceb7-445f-9853-6ce750f2c607",
                            RoleId = "dd5eecad-2615-45b4-a3cf-40f262931194"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SalesSystem.Modules.Buys.Domain.Buy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBuy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Buys");
                });

            modelBuilder.Entity("SalesSystem.Modules.CartItems.Domain.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("SalesSystem.Modules.Carts.Domain.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b993ecc5-3d87-4169-8b10-90245f0b9780"),
                            UserId = "9eb3c88f-e2e1-4d83-8b03-ad506ed4e576"
                        },
                        new
                        {
                            Id = new Guid("b6a253ce-9b1d-4ec8-b959-cca2b308d01d"),
                            UserId = "aec741be-ceb7-445f-9853-6ce750f2c607"
                        });
                });

            modelBuilder.Entity("SalesSystem.Modules.Categories.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec818aee-633e-4089-aa36-1547155e2836"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8674),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Electrónica",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("30ee5a65-32f9-4807-913e-79c0902ed954"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8683),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Ropa y Accesorios",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("be05452d-cde3-4a6f-b0fe-ae18c7b006c6"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8686),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Hogar y Decoración",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7bcda787-3f97-4c4f-a48c-ab17c254cd33"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8689),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Belleza y Cuidado Personal",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("846e4eab-676f-46f6-92b6-6e4b0df92c45"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8691),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Deportes y Aire Libre",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0bfc609c-447d-453e-9ba4-49cd315026d7"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8707),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Juguetes y Juegos",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("07e3a10c-f25e-4e29-93e4-96099c2e1b62"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8713),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Libros y Entretenimiento",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("84186444-d216-4129-bdb9-450bdfb5ed7a"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8715),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Alimentación y Bebidas",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9f1450be-b97a-48d1-be02-7746a3e6aa8d"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8718),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Salud y Bienestar",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d2a37980-a661-48a4-ac6e-65f6f2fe8cbf"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8721),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Automóviles y Motocicletas",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SalesSystem.Modules.ProductCategories.Domain.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = new Guid("ec818aee-633e-4089-aa36-1547155e2836"),
                            ProductId = new Guid("f772c8db-bfbe-4eb2-8d6c-7cd8f4447253")
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = new Guid("ec818aee-633e-4089-aa36-1547155e2836"),
                            ProductId = new Guid("e6a79b88-7ecd-4d13-bbb9-7ad317a4749d")
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = new Guid("ec818aee-633e-4089-aa36-1547155e2836"),
                            ProductId = new Guid("da4ce4aa-c14a-41be-9359-6232dd97210e")
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = new Guid("30ee5a65-32f9-4807-913e-79c0902ed954"),
                            ProductId = new Guid("9c412375-70f7-447d-8507-c0363067624d")
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = new Guid("30ee5a65-32f9-4807-913e-79c0902ed954"),
                            ProductId = new Guid("d73a1484-7fd4-4736-a0de-2445283687a8")
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = new Guid("30ee5a65-32f9-4807-913e-79c0902ed954"),
                            ProductId = new Guid("5ba7b849-7e6f-469b-b796-4376116cf2d8")
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = new Guid("be05452d-cde3-4a6f-b0fe-ae18c7b006c6"),
                            ProductId = new Guid("8172c711-bd72-438c-9502-7ef4ed280685")
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = new Guid("be05452d-cde3-4a6f-b0fe-ae18c7b006c6"),
                            ProductId = new Guid("64691c1a-7558-4583-891c-aa52547aff06")
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = new Guid("be05452d-cde3-4a6f-b0fe-ae18c7b006c6"),
                            ProductId = new Guid("a3b9eca0-5298-4b83-9af0-9a6c8bdbc5bc")
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = new Guid("7bcda787-3f97-4c4f-a48c-ab17c254cd33"),
                            ProductId = new Guid("f3209d12-652c-4d00-96ee-b2e67bd275b4")
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = new Guid("7bcda787-3f97-4c4f-a48c-ab17c254cd33"),
                            ProductId = new Guid("a1f465ed-46a0-491a-96d4-ad6a763a6468")
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = new Guid("7bcda787-3f97-4c4f-a48c-ab17c254cd33"),
                            ProductId = new Guid("27767dd8-9a24-4d9b-a579-3a5e92a890cc")
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = new Guid("846e4eab-676f-46f6-92b6-6e4b0df92c45"),
                            ProductId = new Guid("b2cf7588-dea4-4825-b593-33646ba49fa7")
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = new Guid("846e4eab-676f-46f6-92b6-6e4b0df92c45"),
                            ProductId = new Guid("3e0b3723-ec2d-4dfa-8b34-6e61107a2042")
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = new Guid("846e4eab-676f-46f6-92b6-6e4b0df92c45"),
                            ProductId = new Guid("3bc2f28e-a49a-4d36-8117-8015e4caea66")
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = new Guid("0bfc609c-447d-453e-9ba4-49cd315026d7"),
                            ProductId = new Guid("297ddc01-3c5d-44d7-bfaa-3ad36e96fb53")
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = new Guid("0bfc609c-447d-453e-9ba4-49cd315026d7"),
                            ProductId = new Guid("3d389ed0-e764-4c4d-bfd8-b5c94f9f9d20")
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = new Guid("0bfc609c-447d-453e-9ba4-49cd315026d7"),
                            ProductId = new Guid("8aab0882-3ebd-4984-84ca-c60f6348db4a")
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = new Guid("07e3a10c-f25e-4e29-93e4-96099c2e1b62"),
                            ProductId = new Guid("c2b623b6-33d7-482c-9b65-e65cb38df321")
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = new Guid("07e3a10c-f25e-4e29-93e4-96099c2e1b62"),
                            ProductId = new Guid("8979e7a4-52a0-4128-b02d-def5dd062bca")
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = new Guid("07e3a10c-f25e-4e29-93e4-96099c2e1b62"),
                            ProductId = new Guid("fe9f16b1-3c40-4ab7-a96d-68df023b4bd0")
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = new Guid("84186444-d216-4129-bdb9-450bdfb5ed7a"),
                            ProductId = new Guid("cdbe3ce9-1592-46d4-b98b-66cb14fa6c77")
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = new Guid("84186444-d216-4129-bdb9-450bdfb5ed7a"),
                            ProductId = new Guid("197d5aa1-38ff-4f80-b7bc-1f9cf85db60a")
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = new Guid("84186444-d216-4129-bdb9-450bdfb5ed7a"),
                            ProductId = new Guid("4d1370ac-3d88-44ba-8a64-039f5f4b1f36")
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = new Guid("9f1450be-b97a-48d1-be02-7746a3e6aa8d"),
                            ProductId = new Guid("7738fddd-3b46-48e2-8295-0f5dfded87ba")
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = new Guid("9f1450be-b97a-48d1-be02-7746a3e6aa8d"),
                            ProductId = new Guid("ca2e2697-761b-4361-bf06-545e99cccf19")
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = new Guid("9f1450be-b97a-48d1-be02-7746a3e6aa8d"),
                            ProductId = new Guid("1332d295-52e2-4ddf-a6b2-2ec201e9bb11")
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = new Guid("d2a37980-a661-48a4-ac6e-65f6f2fe8cbf"),
                            ProductId = new Guid("ab7ff19d-fc3d-4bb1-a19d-2a10582fc5f0")
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = new Guid("d2a37980-a661-48a4-ac6e-65f6f2fe8cbf"),
                            ProductId = new Guid("0ac6a7da-e1c4-44df-8551-274ab3412183")
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = new Guid("d2a37980-a661-48a4-ac6e-65f6f2fe8cbf"),
                            ProductId = new Guid("3494e9a9-d49f-481f-90c8-336195121160")
                        });
                });

            modelBuilder.Entity("SalesSystem.Modules.Products.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Stock")
                        .HasMaxLength(4)
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f772c8db-bfbe-4eb2-8d6c-7cd8f4447253"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8750),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Smartphone Samsung Galaxy S22",
                            Price = 525m,
                            Stock = 255,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e6a79b88-7ecd-4d13-bbb9-7ad317a4749d"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8761),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Laptop HP Pavilion 16",
                            Price = 1500m,
                            Stock = 210,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("da4ce4aa-c14a-41be-9359-6232dd97210e"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8764),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Auriculares inalámbricos Sony WH-1000XM4",
                            Price = 120m,
                            Stock = 520,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9c412375-70f7-447d-8507-c0363067624d"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8767),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Camiseta de algodón con estampado floral",
                            Price = 40m,
                            Stock = 41,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d73a1484-7fd4-4736-a0de-2445283687a8"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8772),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Pantalones vaqueros de corte ajustado",
                            Price = 25m,
                            Stock = 210,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5ba7b849-7e6f-469b-b796-4376116cf2d8"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8776),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Bolso de cuero genuino con diseño elegante",
                            Price = 30m,
                            Stock = 50,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8172c711-bd72-438c-9502-7ef4ed280685"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8778),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Juego de muebles de sala en tonos neutros",
                            Price = 720m,
                            Stock = 78,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("64691c1a-7558-4583-891c-aa52547aff06"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8781),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Juego de sábanas de algodón con diseño moderno",
                            Price = 255m,
                            Stock = 39,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a3b9eca0-5298-4b83-9af0-9a6c8bdbc5bc"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8783),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Lámpara de mesa de estilo industrial",
                            Price = 120m,
                            Stock = 55,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f3209d12-652c-4d00-96ee-b2e67bd275b4"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8787),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Set de maquillaje profesional de alta gama",
                            Price = 156m,
                            Stock = 52,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a1f465ed-46a0-491a-96d4-ad6a763a6468"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8790),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Perfume floral y fresco para mujer",
                            Price = 85m,
                            Stock = 75,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("27767dd8-9a24-4d9b-a579-3a5e92a890cc"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8793),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Cepillo alisador de cabello con tecnología iónica",
                            Price = 175m,
                            Stock = 19,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b2cf7588-dea4-4825-b593-33646ba49fa7"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8798),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Bicicleta de montaña todoterreno",
                            Price = 350m,
                            Stock = 98,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3e0b3723-ec2d-4dfa-8b34-6e61107a2042"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8800),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Ropa deportiva para running, incluye camiseta y pantalones cortos",
                            Price = 355m,
                            Stock = 64,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3bc2f28e-a49a-4d36-8117-8015e4caea66"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8802),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Tienda de campaña resistente al agua para 4 personas",
                            Price = 423m,
                            Stock = 27,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("297ddc01-3c5d-44d7-bfaa-3ad36e96fb53"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8804),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Juego de construcción LEGO Classic",
                            Price = 135m,
                            Stock = 155,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3d389ed0-e764-4c4d-bfd8-b5c94f9f9d20"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8807),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Peluche suave y tierno de animalito",
                            Price = 45m,
                            Stock = 525,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8aab0882-3ebd-4984-84ca-c60f6348db4a"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8811),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Juego de mesa estratégico \"Catan\"",
                            Price = 120m,
                            Stock = 85,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c2b623b6-33d7-482c-9b65-e65cb38df321"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8813),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Novela de suspenso \"La Chica del Tren\" de Paula Hawkins",
                            Price = 25m,
                            Stock = 320,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8979e7a4-52a0-4128-b02d-def5dd062bca"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8815),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "CD de la banda sonora original de Greace",
                            Price = 21m,
                            Stock = 485,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fe9f16b1-3c40-4ab7-a96d-68df023b4bd0"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8820),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Videojuego de aventuras \"The Legend of Zelda: Breath of the Wild\"",
                            Price = 55m,
                            Stock = 785,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cdbe3ce9-1592-46d4-b98b-66cb14fa6c77"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8822),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Selección de chocolates gourmet de diferentes países",
                            Price = 12m,
                            Stock = 528,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("197d5aa1-38ff-4f80-b7bc-1f9cf85db60a"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8825),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Caja de té variado con sabores exóticos: Bigelow",
                            Price = 25m,
                            Stock = 740,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4d1370ac-3d88-44ba-8a64-039f5f4b1f36"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8827),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Vino tinto reserva de una bodega Alavesas",
                            Price = 128m,
                            Stock = 196,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7738fddd-3b46-48e2-8295-0f5dfded87ba"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8830),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Set de suplementos vitamínicos Arete, para la salud general",
                            Price = 129m,
                            Stock = 504,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ca2e2697-761b-4361-bf06-545e99cccf19"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8876),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Dispositivo de seguimiento de actividad física y sueño",
                            Price = 98m,
                            Stock = 127,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1332d295-52e2-4ddf-a6b2-2ec201e9bb11"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8878),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Mascarilla facial Cucumber, de cuidado intensivo con ingredientes naturales",
                            Price = 234m,
                            Stock = 529,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ab7ff19d-fc3d-4bb1-a19d-2a10582fc5f0"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8880),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Kit de limpieza y cuidado automotriz de calidad profesional Chemical Guys",
                            Price = 359m,
                            Stock = 74,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0ac6a7da-e1c4-44df-8551-274ab3412183"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8885),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Funda de asiento de cuero para automóvil Handao-Us",
                            Price = 75m,
                            Stock = 56,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3494e9a9-d49f-481f-90c8-336195121160"),
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 782, DateTimeKind.Utc).AddTicks(8887),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            IsUpdated = false,
                            Name = "Casco de motocicleta de diseño aerodinámico y alta seguridad BCBKD",
                            Price = 125m,
                            Stock = 142,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SalesSystem.Modules.Products.Domain.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfa8872c-1da8-45d3-bffb-0fd35ecfce46"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Smartphone Samsung Galaxy S22.jpg",
                            ProductId = new Guid("f772c8db-bfbe-4eb2-8d6c-7cd8f4447253")
                        },
                        new
                        {
                            Id = new Guid("d6844e4b-f67c-4ec4-8995-4bc33963799b"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Laptop HP Pavilion 16.jpg",
                            ProductId = new Guid("e6a79b88-7ecd-4d13-bbb9-7ad317a4749d")
                        },
                        new
                        {
                            Id = new Guid("fc9b46f5-1dda-4cdd-899b-1f2972b697f6"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Auriculares inalámbricos Sony WH-1000XM4.jpg",
                            ProductId = new Guid("da4ce4aa-c14a-41be-9359-6232dd97210e")
                        },
                        new
                        {
                            Id = new Guid("cca5c6e8-0a44-4179-9ce2-93851db99a72"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Camiseta de algodón con estampado floral.jpg",
                            ProductId = new Guid("9c412375-70f7-447d-8507-c0363067624d")
                        },
                        new
                        {
                            Id = new Guid("68f5b090-8d2f-4364-9dde-7f8083cc7d66"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Pantalones vaqueros de corte ajustado.jpg",
                            ProductId = new Guid("d73a1484-7fd4-4736-a0de-2445283687a8")
                        },
                        new
                        {
                            Id = new Guid("6955a283-ba84-4851-9837-0c030552c138"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Bolso de cuero genuino con diseño elegante.jpg",
                            ProductId = new Guid("5ba7b849-7e6f-469b-b796-4376116cf2d8")
                        },
                        new
                        {
                            Id = new Guid("6163acda-8485-4a3b-9fb6-ffe614589271"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Juego de muebles de sala en tonos neutros.jpg",
                            ProductId = new Guid("8172c711-bd72-438c-9502-7ef4ed280685")
                        },
                        new
                        {
                            Id = new Guid("91f116e0-23fc-495a-b07e-789ec2cc1b0b"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Juego de sábanas de algodón con diseño moderno.jpg",
                            ProductId = new Guid("64691c1a-7558-4583-891c-aa52547aff06")
                        },
                        new
                        {
                            Id = new Guid("427f6fe8-a100-4ec1-a5fe-4136200545eb"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Lámpara de mesa de estilo industrial.jpg",
                            ProductId = new Guid("a3b9eca0-5298-4b83-9af0-9a6c8bdbc5bc")
                        },
                        new
                        {
                            Id = new Guid("623b49e8-d596-490b-99c6-b278143dfc8f"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Set de maquillaje profesional de alta gama.jpg",
                            ProductId = new Guid("f3209d12-652c-4d00-96ee-b2e67bd275b4")
                        },
                        new
                        {
                            Id = new Guid("d5fa2691-61b2-4e04-bb20-a3732e3289b1"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Perfume floral y fresco para mujer.jpg",
                            ProductId = new Guid("a1f465ed-46a0-491a-96d4-ad6a763a6468")
                        },
                        new
                        {
                            Id = new Guid("7f1044ff-81d8-445a-a5d6-5c8b676482df"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Cepillo alisador de cabello con tecnología iónica.jpg",
                            ProductId = new Guid("27767dd8-9a24-4d9b-a579-3a5e92a890cc")
                        },
                        new
                        {
                            Id = new Guid("a5a3bcee-f350-498a-9a83-237d86ffc64f"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Bicicleta de montaña todoterreno.jpg",
                            ProductId = new Guid("b2cf7588-dea4-4825-b593-33646ba49fa7")
                        },
                        new
                        {
                            Id = new Guid("45ea1bd4-fe84-4639-b34b-b2c34952ad3e"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Ropa deportiva para running.jpg",
                            ProductId = new Guid("3e0b3723-ec2d-4dfa-8b34-6e61107a2042")
                        },
                        new
                        {
                            Id = new Guid("e65b370f-e7e7-4bf2-a02c-8dc07740a447"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Tienda de campaña resistente al agua para 4 personas.jpg",
                            ProductId = new Guid("3bc2f28e-a49a-4d36-8117-8015e4caea66")
                        },
                        new
                        {
                            Id = new Guid("d1b2dbea-e67c-45f0-9987-79a2d574c224"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Juego de construcción LEGO Classic.jpg",
                            ProductId = new Guid("297ddc01-3c5d-44d7-bfaa-3ad36e96fb53")
                        },
                        new
                        {
                            Id = new Guid("e2b15f33-8813-4c1b-b79d-952cc7f1fb91"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Peluche suave y tierno de animalito.jpg",
                            ProductId = new Guid("3d389ed0-e764-4c4d-bfd8-b5c94f9f9d20")
                        },
                        new
                        {
                            Id = new Guid("a20b86b5-83e4-4059-9150-a5b29f8c2689"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Juego de mesa estratégico Catan.jpg",
                            ProductId = new Guid("8aab0882-3ebd-4984-84ca-c60f6348db4a")
                        },
                        new
                        {
                            Id = new Guid("64a4755a-18b2-4cc0-b0d9-f02ad69ce0d9"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Novela de suspenso La Chica del Tren de Paula Hawkins.jpg",
                            ProductId = new Guid("c2b623b6-33d7-482c-9b65-e65cb38df321")
                        },
                        new
                        {
                            Id = new Guid("26acf99d-4704-42ef-a4f3-fbfe54a63834"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/CD de la banda sonora original de Greace",
                            ProductId = new Guid("8979e7a4-52a0-4128-b02d-def5dd062bca")
                        },
                        new
                        {
                            Id = new Guid("5d5ab301-6974-4a45-865d-41ccb9856a89"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/The Legend of Zelda Breath of the Wild.jpg",
                            ProductId = new Guid("fe9f16b1-3c40-4ab7-a96d-68df023b4bd0")
                        },
                        new
                        {
                            Id = new Guid("d75e7808-d92b-4696-9146-5b7e2414c87d"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/chocolates gourmet de diferentes países.jpg",
                            ProductId = new Guid("cdbe3ce9-1592-46d4-b98b-66cb14fa6c77")
                        },
                        new
                        {
                            Id = new Guid("aaccdc04-c1b1-40c6-8a97-a89f360d68be"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Caja de té variado Bigelow.jpg",
                            ProductId = new Guid("197d5aa1-38ff-4f80-b7bc-1f9cf85db60a")
                        },
                        new
                        {
                            Id = new Guid("d03338f3-cda5-42f5-a841-297ae299e88a"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Vino tinto reserva de una bodega Alavesas.jpg",
                            ProductId = new Guid("4d1370ac-3d88-44ba-8a64-039f5f4b1f36")
                        },
                        new
                        {
                            Id = new Guid("e54b38bc-310d-41c7-bdf2-cbf33dcd6e30"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Suplementos vitamínicos arete.jpg",
                            ProductId = new Guid("7738fddd-3b46-48e2-8295-0f5dfded87ba")
                        },
                        new
                        {
                            Id = new Guid("93a5f220-9bd1-4cc6-a5a4-1d602554fca9"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Dispositivo de seguimiento de actividad física y sueño.jpg",
                            ProductId = new Guid("ca2e2697-761b-4361-bf06-545e99cccf19")
                        },
                        new
                        {
                            Id = new Guid("ad754911-87f7-4c08-ae39-ed0b186548de"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Mascarilla facial Cucumber.jpg",
                            ProductId = new Guid("1332d295-52e2-4ddf-a6b2-2ec201e9bb11")
                        },
                        new
                        {
                            Id = new Guid("4d03bc49-71e2-441b-a6eb-95979c4d5f1a"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Kit de limpieza y cuidado automotriz Chemical Guys.jpg",
                            ProductId = new Guid("ab7ff19d-fc3d-4bb1-a19d-2a10582fc5f0")
                        },
                        new
                        {
                            Id = new Guid("9c2415a4-0060-4da0-abe9-23a9f9330e7b"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Funda de asiento de cuero Handao-Us.jpg",
                            ProductId = new Guid("0ac6a7da-e1c4-44df-8551-274ab3412183")
                        },
                        new
                        {
                            Id = new Guid("b18a7575-d6ce-49a1-9fa3-0de4b116222b"),
                            ImageUrl = "/Shared/Infrastructure/Images/Products/Casco de motocicleta BCBKD.jpg",
                            ProductId = new Guid("3494e9a9-d49f-481f-90c8-336195121160")
                        });
                });

            modelBuilder.Entity("SalesSystem.Modules.TempCartItems.Domain.TempCartItem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.Property<Guid>("TempUser")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("TempCartItems");
                });

            modelBuilder.Entity("SalesSystem.Modules.Users.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "9eb3c88f-e2e1-4d83-8b03-ad506ed4e576",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "12975a81-15f5-42b8-a23b-2cc400f7291b",
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 623, DateTimeKind.Utc).AddTicks(6155),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Luis@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Luis",
                            IsDeleted = false,
                            IsUpdated = false,
                            LastName = "Caceres",
                            LockoutEnabled = true,
                            NormalizedEmail = "LUIS@MAIL.COM",
                            NormalizedUserName = "LUIS@MAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECB6cp6P6YggIwmj+zSYrG98N7L3hSSJ7UBTMI22eZIf9Xkgo8bptId8m7Ozf/Q/ig==",
                            PhoneNumber = "7588-5214",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "39f6cee6-90ab-40a7-b3b2-01a33db45763",
                            TwoFactorEnabled = false,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Luis@mail.com"
                        },
                        new
                        {
                            Id = "aec741be-ceb7-445f-9853-6ce750f2c607",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "369bd5f4-977e-4196-b328-312e3b768266",
                            CreateAt = new DateTime(2023, 8, 31, 17, 53, 22, 623, DateTimeKind.Utc).AddTicks(6178),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Steven@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Steven",
                            IsDeleted = false,
                            IsUpdated = false,
                            LastName = "Caceres",
                            LockoutEnabled = true,
                            NormalizedEmail = "STEVEN@MAIL.COM",
                            NormalizedUserName = "STEVEN@MAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGjsVWxB6GhW9TB2w3BpuiUQceKDq4+IpZB2beM4eU9zfmuqeeLhkbnoFMwo3YhVGw==",
                            PhoneNumber = "7588-5214",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8083a285-20fe-4f80-bc44-979d944aed7c",
                            TwoFactorEnabled = false,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Steven@mail.com"
                        });
                });

            modelBuilder.Entity("SalesSystem.Modules.Users.Domain.Entities.UserAddres", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressSpecific")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddres");
                });

            modelBuilder.Entity("SalesSystem.Modules.Users.Domain.Entities.UserCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExpiredDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerCard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserCards");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalesSystem.Modules.Buys.Domain.Buy", b =>
                {
                    b.HasOne("SalesSystem.Modules.Products.Domain.Product", "Product")
                        .WithMany("Buys")
                        .HasForeignKey("ProductId");

                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalesSystem.Modules.CartItems.Domain.CartItem", b =>
                {
                    b.HasOne("SalesSystem.Modules.Carts.Domain.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId");

                    b.HasOne("SalesSystem.Modules.Products.Domain.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesSystem.Modules.Carts.Domain.Cart", b =>
                {
                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("SalesSystem.Modules.Carts.Domain.Cart", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalesSystem.Modules.ProductCategories.Domain.ProductCategory", b =>
                {
                    b.HasOne("SalesSystem.Modules.Categories.Domain.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId");

                    b.HasOne("SalesSystem.Modules.Products.Domain.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesSystem.Modules.Products.Domain.ProductImage", b =>
                {
                    b.HasOne("SalesSystem.Modules.Products.Domain.Product", "Product")
                        .WithMany("ImageUrl")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesSystem.Modules.TempCartItems.Domain.TempCartItem", b =>
                {
                    b.HasOne("SalesSystem.Modules.Products.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesSystem.Modules.Users.Domain.Entities.UserAddres", b =>
                {
                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", "User")
                        .WithMany("UserAddres")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalesSystem.Modules.Users.Domain.Entities.UserCard", b =>
                {
                    b.HasOne("SalesSystem.Modules.Users.Domain.Entities.User", "User")
                        .WithMany("UserCards")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalesSystem.Modules.Carts.Domain.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("SalesSystem.Modules.Categories.Domain.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SalesSystem.Modules.Products.Domain.Product", b =>
                {
                    b.Navigation("Buys");

                    b.Navigation("CartItems");

                    b.Navigation("ImageUrl");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SalesSystem.Modules.Users.Domain.Entities.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("UserAddres");

                    b.Navigation("UserCards");
                });
#pragma warning restore 612, 618
        }
    }
}
